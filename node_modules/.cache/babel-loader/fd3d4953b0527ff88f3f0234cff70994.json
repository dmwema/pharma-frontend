{"remainingRequest":"/home/calculus/dev/m/pharma-frontend/node_modules/babel-loader/lib/index.js!/home/calculus/dev/m/pharma-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/calculus/dev/m/pharma-frontend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/calculus/dev/m/pharma-frontend/src/components/Widgets/WidgetGlobe.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/calculus/dev/m/pharma-frontend/src/components/Widgets/WidgetGlobe.vue","mtime":1652296673166},{"path":"/home/calculus/dev/m/pharma-frontend/babel.config.js","mtime":1652296646452},{"path":"/home/calculus/dev/m/pharma-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/calculus/dev/m/pharma-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/calculus/dev/m/pharma-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/calculus/dev/m/pharma-frontend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9ob21lL2NhbGN1bHVzL2Rldi9tL3BoYXJtYS1mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwoKdmFyIFRIUkVFID0gcmVxdWlyZSgnLi4vLi4vcGx1Z2lucy90aHJlZS90aHJlZWpzLmpzJyk7CgpyZXF1aXJlKCcuLi8uLi9wbHVnaW5zL3RocmVlL29yYml0LWNvbnRyb2xzLmpzJyk7CgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7fTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgY29udGFpbmVyID0gdGhpcy4kcmVmcy5nbG9iZUNvbnRhaW5lcjsKICAgIHZhciBjYW52YXMgPSB0aGlzLiRyZWZzLmdsb2JlOwogICAgdmFyIGdsb2JlUmFkaXVzID0gMTAwOwogICAgdmFyIGdsb2JlV2lkdGggPSA0MDk4IC8gMjsKICAgIHZhciBnbG9iZUhlaWdodCA9IDE5NjggLyAyOwoKICAgIGZ1bmN0aW9uIGNvbnZlcnRGbGF0Q29vcmRzVG9TcGhlcmVDb29yZHMoeCwgeSkgewogICAgICB2YXIgbGF0aXR1ZGUgPSAoeCAtIGdsb2JlV2lkdGgpIC8gZ2xvYmVXaWR0aCAqIC0xODA7CiAgICAgIHZhciBsb25naXR1ZGUgPSAoeSAtIGdsb2JlSGVpZ2h0KSAvIGdsb2JlSGVpZ2h0ICogLTkwOwogICAgICBsYXRpdHVkZSA9IGxhdGl0dWRlICogTWF0aC5QSSAvIDE4MDsKICAgICAgbG9uZ2l0dWRlID0gbG9uZ2l0dWRlICogTWF0aC5QSSAvIDE4MDsKICAgICAgdmFyIHJhZGl1cyA9IE1hdGguY29zKGxvbmdpdHVkZSkgKiBnbG9iZVJhZGl1czsKICAgICAgcmV0dXJuIHsKICAgICAgICB4OiBNYXRoLmNvcyhsYXRpdHVkZSkgKiByYWRpdXMsCiAgICAgICAgeTogTWF0aC5zaW4obG9uZ2l0dWRlKSAqIGdsb2JlUmFkaXVzLAogICAgICAgIHo6IE1hdGguc2luKGxhdGl0dWRlKSAqIHJhZGl1cwogICAgICB9OwogICAgfQoKICAgIGZ1bmN0aW9uIG1ha2VNYWdpYyhwb2ludHMpIHsKICAgICAgdmFyIF9jb250YWluZXIkZ2V0Qm91bmRpbiA9IGNvbnRhaW5lci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSwKICAgICAgICAgIHdpZHRoID0gX2NvbnRhaW5lciRnZXRCb3VuZGluLndpZHRoLAogICAgICAgICAgaGVpZ2h0ID0gX2NvbnRhaW5lciRnZXRCb3VuZGluLmhlaWdodDsgLy8gMS4gU2V0dXAgc2NlbmUKCgogICAgICB2YXIgc2NlbmUgPSBuZXcgVEhSRUUuU2NlbmUoKTsgLy8gMi4gU2V0dXAgY2FtZXJhCgogICAgICB2YXIgY2FtZXJhID0gbmV3IFRIUkVFLlBlcnNwZWN0aXZlQ2FtZXJhKDQ1LCB3aWR0aCAvIGhlaWdodCk7IC8vIDMuIFNldHVwIHJlbmRlcmVyCgogICAgICB2YXIgcmVuZGVyZXIgPSBuZXcgVEhSRUUuV2ViR0xSZW5kZXJlcih7CiAgICAgICAgY2FudmFzOiBjYW52YXMsCiAgICAgICAgYW50aWFsaWFzOiB0cnVlCiAgICAgIH0pOwogICAgICByZW5kZXJlci5zZXRTaXplKHdpZHRoLCBoZWlnaHQpOyAvLyA0LiBBZGQgcG9pbnRzIHRvIGNhbnZhcwogICAgICAvLyAtIFNpbmdsZSBnZW9tZXRyeSB0byBjb250YWluIGFsbCBwb2ludHMuCgogICAgICB2YXIgbWVyZ2VkR2VvbWV0cnkgPSBuZXcgVEhSRUUuR2VvbWV0cnkoKTsgLy8gLSBNYXRlcmlhbCB0aGF0IHRoZSBkb3RzIHdpbGwgYmUgbWFkZSBvZi4KCiAgICAgIHZhciBwb2ludEdlb21ldHJ5ID0gbmV3IFRIUkVFLlNwaGVyZUdlb21ldHJ5KDAuNSwgMSwgMSk7CiAgICAgIHZhciBwb2ludE1hdGVyaWFsID0gbmV3IFRIUkVFLk1lc2hCYXNpY01hdGVyaWFsKHsKICAgICAgICBjb2xvcjogIiM5ODlkYjUiCiAgICAgIH0pOwoKICAgICAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHBvaW50cyksCiAgICAgICAgICBfc3RlcDsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciBwb2ludCA9IF9zdGVwLnZhbHVlOwoKICAgICAgICAgIHZhciBfY29udmVydEZsYXRDb29yZHNUb1MgPSBjb252ZXJ0RmxhdENvb3Jkc1RvU3BoZXJlQ29vcmRzKHBvaW50LngsIHBvaW50LnksIHdpZHRoLCBoZWlnaHQpLAogICAgICAgICAgICAgIHggPSBfY29udmVydEZsYXRDb29yZHNUb1MueCwKICAgICAgICAgICAgICB5ID0gX2NvbnZlcnRGbGF0Q29vcmRzVG9TLnksCiAgICAgICAgICAgICAgeiA9IF9jb252ZXJ0RmxhdENvb3Jkc1RvUy56OwoKICAgICAgICAgIGlmICh4ICYmIHkgJiYgeikgewogICAgICAgICAgICBwb2ludEdlb21ldHJ5LnRyYW5zbGF0ZSh4LCB5LCB6KTsKICAgICAgICAgICAgbWVyZ2VkR2VvbWV0cnkubWVyZ2UocG9pbnRHZW9tZXRyeSk7CiAgICAgICAgICAgIHBvaW50R2VvbWV0cnkudHJhbnNsYXRlKC14LCAteSwgLXopOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBfaXRlcmF0b3IuZigpOwogICAgICB9CgogICAgICB2YXIgZ2xvYmVTaGFwZSA9IG5ldyBUSFJFRS5NZXNoKG1lcmdlZEdlb21ldHJ5LCBwb2ludE1hdGVyaWFsKTsKICAgICAgc2NlbmUuYWRkKGdsb2JlU2hhcGUpOwogICAgICBjb250YWluZXIuY2xhc3NMaXN0LmFkZCgicGVla2Fib28iKTsgLy8gU2V0dXAgb3JiaXRhbCBjb250cm9scwoKICAgICAgY2FtZXJhLm9yYml0Q29udHJvbHMgPSBuZXcgVEhSRUUuT3JiaXRDb250cm9scyhjYW1lcmEsIGNhbnZhcyk7CiAgICAgIGNhbWVyYS5vcmJpdENvbnRyb2xzLmVuYWJsZUtleXMgPSBmYWxzZTsKICAgICAgY2FtZXJhLm9yYml0Q29udHJvbHMuZW5hYmxlUGFuID0gZmFsc2U7CiAgICAgIGNhbWVyYS5vcmJpdENvbnRyb2xzLmVuYWJsZVpvb20gPSBmYWxzZTsKICAgICAgY2FtZXJhLm9yYml0Q29udHJvbHMuZW5hYmxlRGFtcGluZyA9IGZhbHNlOwogICAgICBjYW1lcmEub3JiaXRDb250cm9scy5lbmFibGVSb3RhdGUgPSB0cnVlOwogICAgICBjYW1lcmEub3JiaXRDb250cm9scy5hdXRvUm90YXRlID0gdHJ1ZTsKICAgICAgY2FtZXJhLnBvc2l0aW9uLnogPSAtMjY1OwoKICAgICAgZnVuY3Rpb24gYW5pbWF0ZSgpIHsKICAgICAgICAvLyBvcmJpdENvbnRyb2xzLmF1dG9Sb3RhdGUgaXMgZW5hYmxlZCBzbyBvcmJpdENvbnRyb2xzLnVwZGF0ZQogICAgICAgIC8vIG11c3QgYmUgY2FsbGVkIGluc2lkZSBhbmltYXRpb24gbG9vcC4KICAgICAgICBjYW1lcmEub3JiaXRDb250cm9scy51cGRhdGUoKTsKICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoYW5pbWF0ZSk7CiAgICAgICAgcmVuZGVyZXIucmVuZGVyKHNjZW5lLCBjYW1lcmEpOwogICAgICB9CgogICAgICBhbmltYXRlKCk7CiAgICB9CgogICAgZnVuY3Rpb24gaGFzV2ViR0woKSB7CiAgICAgIHZhciBnbCA9IGNhbnZhcy5nZXRDb250ZXh0KCJ3ZWJnbCIpIHx8IGNhbnZhcy5nZXRDb250ZXh0KCJleHBlcmltZW50YWwtd2ViZ2wiKTsKCiAgICAgIGlmIChnbCAmJiBnbCBpbnN0YW5jZW9mIFdlYkdMUmVuZGVyaW5nQ29udGV4dCkgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIGluaXQoKSB7CiAgICAgIGlmIChoYXNXZWJHTCgpKSB7CiAgICAgICAgd2luZG93OwogICAgICAgIHdpbmRvdy5mZXRjaCgiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2NyZWF0aXZldGltb2ZmaWNpYWwvcHVibGljLWFzc2V0cy9tYXN0ZXIvc29mdC11aS1kYXNoYm9hcmQtcHJvL2Fzc2V0cy9qcy9wb2ludHMuanNvbiIpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwogICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgIG1ha2VNYWdpYyhkYXRhLnBvaW50cyk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KCiAgICBpbml0KCk7CiAgfQp9Ow=="},{"version":3,"mappings":"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","names":["THREE","require","data","mounted","container","$refs","globeContainer","canvas","globe","globeRadius","globeWidth","globeHeight","convertFlatCoordsToSphereCoords","x","y","latitude","longitude","Math","PI","radius","cos","sin","z","makeMagic","points","getBoundingClientRect","width","height","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","antialias","setSize","mergedGeometry","Geometry","pointGeometry","SphereGeometry","pointMaterial","MeshBasicMaterial","color","point","translate","merge","globeShape","Mesh","add","classList","orbitControls","OrbitControls","enableKeys","enablePan","enableZoom","enableDamping","enableRotate","autoRotate","position","animate","update","requestAnimationFrame","render","hasWebGL","gl","getContext","WebGLRenderingContext","init","window","fetch","then","response","json"],"sourceRoot":"","sources":["/home/calculus/dev/m/pharma-frontend/src/components/Widgets/WidgetGlobe.vue"],"sourcesContent":["<template>\r\n\t<!-- Globe widget -->\r\n\t<div ref=\"globeContainer\" class=\"globeContainer\">\r\n\t\t<canvas ref=\"globe\" width=\"700\" height=\"655\" class=\"\"></canvas>\r\n\t</div>\r\n\t<!-- Globe widget -->\r\n</template>\r\n\r\n<script>\r\n\r\n\tvar THREE = require('../../plugins/three/threejs.js');\r\n\trequire('../../plugins/three/orbit-controls.js');\r\n\r\n\texport default ({\r\n\t\tdata(){\r\n\t\t\treturn {\r\n\t\t\t} ;\r\n\t\t},\r\n\t\tmounted () {\r\n\t\t\tlet container = this.$refs.globeContainer ;\r\n\t\t\tlet canvas = this.$refs.globe ;\r\n\r\n\t\t\tconst globeRadius = 100;\r\n\t\t\tconst globeWidth = 4098 / 2;\r\n\t\t\tconst globeHeight = 1968 / 2;\r\n\r\n\t\t\tfunction convertFlatCoordsToSphereCoords(x, y) {\r\n\t\t\t\tlet latitude = ((x - globeWidth) / globeWidth) * -180;\r\n\t\t\t\tlet longitude = ((y - globeHeight) / globeHeight) * -90;\r\n\t\t\t\tlatitude = (latitude * Math.PI) / 180;\r\n\t\t\t\tlongitude = (longitude * Math.PI) / 180;\r\n\t\t\t\tconst radius = Math.cos(longitude) * globeRadius;\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx: Math.cos(latitude) * radius,\r\n\t\t\t\t\ty: Math.sin(longitude) * globeRadius,\r\n\t\t\t\t\tz: Math.sin(latitude) * radius\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tfunction makeMagic(points) {\r\n\t\t\t\tconst {\r\n\t\t\t\t\twidth,\r\n\t\t\t\t\theight\r\n\t\t\t\t} = container.getBoundingClientRect();\r\n\r\n\t\t\t\t// 1. Setup scene\r\n\t\t\t\tconst scene = new THREE.Scene();\r\n\t\t\t\t// 2. Setup camera\r\n\t\t\t\tconst camera = new THREE.PerspectiveCamera(45, width / height);\r\n\t\t\t\t// 3. Setup renderer\r\n\t\t\t\tconst renderer = new THREE.WebGLRenderer({\r\n\t\t\t\t\tcanvas,\r\n\t\t\t\t\tantialias: true\r\n\t\t\t\t});\r\n\t\t\t\trenderer.setSize(width, height);\r\n\t\t\t\t// 4. Add points to canvas\r\n\t\t\t\t// - Single geometry to contain all points.\r\n\t\t\t\tconst mergedGeometry = new THREE.Geometry();\r\n\t\t\t\t// - Material that the dots will be made of.\r\n\t\t\t\tconst pointGeometry = new THREE.SphereGeometry(0.5, 1, 1);\r\n\t\t\t\tconst pointMaterial = new THREE.MeshBasicMaterial({\r\n\t\t\t\t\tcolor: \"#989db5\",\r\n\t\t\t\t});\r\n\r\n\t\t\t\tfor (let point of points) {\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tx,\r\n\t\t\t\t\t\ty,\r\n\t\t\t\t\t\tz\r\n\t\t\t\t\t} = convertFlatCoordsToSphereCoords(\r\n\t\t\t\t\t\tpoint.x,\r\n\t\t\t\t\t\tpoint.y,\r\n\t\t\t\t\t\twidth,\r\n\t\t\t\t\t\theight\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tif (x && y && z) {\r\n\t\t\t\t\t\tpointGeometry.translate(x, y, z);\r\n\t\t\t\t\t\tmergedGeometry.merge(pointGeometry);\r\n\t\t\t\t\t\tpointGeometry.translate(-x, -y, -z);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst globeShape = new THREE.Mesh(mergedGeometry, pointMaterial);\r\n\t\t\t\tscene.add(globeShape);\r\n\r\n\t\t\t\tcontainer.classList.add(\"peekaboo\");\r\n\r\n\t\t\t\t// Setup orbital controls\r\n\t\t\t\tcamera.orbitControls = new THREE.OrbitControls(camera, canvas);\r\n\t\t\t\tcamera.orbitControls.enableKeys = false;\r\n\t\t\t\tcamera.orbitControls.enablePan = false;\r\n\t\t\t\tcamera.orbitControls.enableZoom = false;\r\n\t\t\t\tcamera.orbitControls.enableDamping = false;\r\n\t\t\t\tcamera.orbitControls.enableRotate = true;\r\n\t\t\t\tcamera.orbitControls.autoRotate = true;\r\n\t\t\t\tcamera.position.z = -265;\r\n\r\n\t\t\t\tfunction animate() {\r\n\t\t\t\t// orbitControls.autoRotate is enabled so orbitControls.update\r\n\t\t\t\t// must be called inside animation loop.\r\n\t\t\t\tcamera.orbitControls.update();\r\n\t\t\t\t\trequestAnimationFrame(animate);\r\n\t\t\t\t\trenderer.render(scene, camera);\r\n\t\t\t\t}\r\n\t\t\t\tanimate();\r\n\t\t\t}\r\n\r\n\t\t\tfunction hasWebGL() {\r\n\t\t\t\tconst gl =\r\n\t\t\t\tcanvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\");\r\n\t\t\t\tif (gl && gl instanceof WebGLRenderingContext) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction init() {\r\n\t\t\t\tif (hasWebGL()) {\r\n\t\t\t\t\twindow\r\n\t\t\t\t\twindow.fetch(\"https://raw.githubusercontent.com/creativetimofficial/public-assets/master/soft-ui-dashboard-pro/assets/js/points.json\")\r\n\t\t\t\t\t\t.then(response => response.json())\r\n\t\t\t\t\t\t.then(data => {\r\n\t\t\t\t\t\t\tmakeMagic(data.points);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinit();\r\n\t\t},\r\n\t})\r\n\r\n</script>"]}]}