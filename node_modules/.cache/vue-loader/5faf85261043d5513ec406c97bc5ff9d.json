{"remainingRequest":"/home/daniel/projetcs/pharma/pharma-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/daniel/projetcs/pharma/pharma-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/daniel/projetcs/pharma/pharma-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/daniel/projetcs/pharma/pharma-frontend/src/components/Sidebars/FacSidebar.vue?vue&type=template&id=32ec87cc&","dependencies":[{"path":"/home/daniel/projetcs/pharma/pharma-frontend/src/components/Sidebars/FacSidebar.vue","mtime":1655757933159},{"path":"/home/daniel/projetcs/pharma/pharma-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1654350269016},{"path":"/home/daniel/projetcs/pharma/pharma-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1654350271480},{"path":"/home/daniel/projetcs/pharma/pharma-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1654350269016},{"path":"/home/daniel/projetcs/pharma/pharma-frontend/node_modules/vue-loader/lib/index.js","mtime":1654350270784}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}