{"remainingRequest":"/home/daniel/projetcs/pharma/pharma-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/daniel/projetcs/pharma/pharma-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/daniel/projetcs/pharma/pharma-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/daniel/projetcs/pharma/pharma-frontend/src/views/Teacher/Deliberation.vue?vue&type=template&id=305eb12a&","dependencies":[{"path":"/home/daniel/projetcs/pharma/pharma-frontend/src/views/Teacher/Deliberation.vue","mtime":1656095120627},{"path":"/home/daniel/projetcs/pharma/pharma-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1654350269016},{"path":"/home/daniel/projetcs/pharma/pharma-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1654350271480},{"path":"/home/daniel/projetcs/pharma/pharma-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1654350269016},{"path":"/home/daniel/projetcs/pharma/pharma-frontend/node_modules/vue-loader/lib/index.js","mtime":1654350270784}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}