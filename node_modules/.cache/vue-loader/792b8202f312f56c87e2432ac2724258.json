{"remainingRequest":"/home/daniel/projetcs/pharma/pharma-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/daniel/projetcs/pharma/pharma-frontend/src/views/Teacher/Deliberation.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/daniel/projetcs/pharma/pharma-frontend/src/views/Teacher/Deliberation.vue","mtime":1656416494882},{"path":"/home/daniel/projetcs/pharma/pharma-frontend/node_modules/css-loader/dist/cjs.js","mtime":1654350269544},{"path":"/home/daniel/projetcs/pharma/pharma-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1654350271372},{"path":"/home/daniel/projetcs/pharma/pharma-frontend/node_modules/postcss-loader/src/index.js","mtime":1654350269980},{"path":"/home/daniel/projetcs/pharma/pharma-frontend/node_modules/sass-loader/dist/cjs.js","mtime":1654350274076},{"path":"/home/daniel/projetcs/pharma/pharma-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1654350269016},{"path":"/home/daniel/projetcs/pharma/pharma-frontend/node_modules/vue-loader/lib/index.js","mtime":1654350270784}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLyogQ2hyb21lLCBTYWZhcmksIEVkZ2UsIE9wZXJhICovCmlucHV0Ojotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uLAppbnB1dDo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbiB7CiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOwogIG1hcmdpbjogMDsKICAgIHRleHQtYWxpZ246IHJpZ2h0OwoJbWFyZ2luLXJpZ2h0OiAxMHB4Owp9CgovKiBGaXJlZm94ICovCmlucHV0W3R5cGU9bnVtYmVyXSB7CiAgLW1vei1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7CiAgICB0ZXh0LWFsaWduOiByaWdodDsKCW1hcmdpbi1yaWdodDogMTBweDsKfQoKLmNvdGVfaW5wdXQgewoJd2lkdGg6IDcwcHgKfQoKLmNvdGVfaW5wdXQuYm9yZGVyLXJlZCB7Cgl3aWR0aDogNzBweDsKfQoKLyoqIHRhYmxlICovCgp0YWJsZS5jb3RlX3RhYmxlIHsgCiAgd2lkdGg6IDEwMCU7IAogIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IAp9CgouY290ZV90YWJsZSB0cjpudGgtb2YtdHlwZShvZGQpIHsgCiAgYmFja2dyb3VuZDogI2VlZTsgCn0KLmNvdGVfdGFibGUgdGggeyAKICBiYWNrZ3JvdW5kOiAjZmZmOyAKICBjb2xvcjogIzAwMDsgCiAgZm9udC13ZWlnaHQ6IGJvbGQ7IAp9Ci5jb3RlX3RhYmxlIHRkLCAuY290ZV90YWJsZSB0aCB7IAogIHBhZGRpbmc6IDZweDsgCiAgdGV4dC1hbGlnbjogbGVmdDsgCn0KCkBtZWRpYSAKb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2MHB4KSwKKG1pbi1kZXZpY2Utd2lkdGg6IDc2OHB4KSBhbmQgKG1heC1kZXZpY2Utd2lkdGg6IDEwMjRweCkgIHsKCgkvKiBGb3JjZSB0YWJsZSB0byBub3QgYmUgbGlrZSB0YWJsZXMgYW55bW9yZSAqLwoJdGFibGUuY290ZV90YWJsZSAsIC5jb3RlX3RhYmxlIHRoZWFkLCAuY290ZV90YWJsZSB0Ym9keSwgLmNvdGVfdGFibGUgdGgsIC5jb3RlX3RhYmxlIHRkLCAuY290ZV90YWJsZSB0ciB7IAoJCWRpc3BsYXk6IGJsb2NrOyAKCX0KCQoJLyogSGlkZSB0YWJsZSBoZWFkZXJzIChidXQgbm90IGRpc3BsYXk6IG5vbmU7LCBmb3IgYWNjZXNzaWJpbGl0eSkgKi8KCS5jb3RlX3RhYmxlIHRoZWFkIHRyIHsgCgkJcG9zaXRpb246IGFic29sdXRlOwoJCXRvcDogLTk5OTlweDsKCQlsZWZ0OiAtOTk5OXB4OwoJfQoJCgkuY290ZV90YWJsZSB0ciB7IGJvcmRlcjogMXB4IHNvbGlkICNjY2M7IH0KCQoJLmNvdGVfdGFibGUgdGQgeyAKCQkvKiBCZWhhdmUgIGxpa2UgYSAicm93IiAqLwoJCWJvcmRlcjogbm9uZTsKCQlib3JkZXItYm90dG9tOiAxcHggc29saWQgI2VlZTsgCgkJcG9zaXRpb246IHJlbGF0aXZlOwoJCXBhZGRpbmctbGVmdDogNTAlOyAKCX0KCQoJLmNvdGVfdGFibGUgdGQ6YmVmb3JlIHsgCgkJLyogTm93IGxpa2UgYSB0YWJsZSBoZWFkZXIgKi8KCQlwb3NpdGlvbjogYWJzb2x1dGU7CgkJLyogVG9wL2xlZnQgdmFsdWVzIG1pbWljIHBhZGRpbmcgKi8KCQl0b3A6IDZweDsKCQlsZWZ0OiA2cHg7CgkJd2lkdGg6IDQ1JTsgCgkJcGFkZGluZy1yaWdodDogMTBweDsgCgkJd2hpdGUtc3BhY2U6IG5vd3JhcDsKCX0KCQoJLyoKCUxhYmVsIHRoZSBkYXRhCgkqLwoJLmNvdGVfdGFibGUgdGQ6bnRoLW9mLXR5cGUoMSk6YmVmb3JlIHsgY29udGVudDogIkZpcnN0IE5hbWUiOyB9CgkuY290ZV90YWJsZSB0ZDpudGgtb2YtdHlwZSgyKTpiZWZvcmUgeyBjb250ZW50OiAiTGFzdCBOYW1lIjsgfQoJLmNvdGVfdGFibGUgdGQ6bnRoLW9mLXR5cGUoMyk6YmVmb3JlIHsgY29udGVudDogIkpvYiBUaXRsZSI7IH0KCS5jb3RlX3RhYmxlIHRkOm50aC1vZi10eXBlKDQpOmJlZm9yZSB7IGNvbnRlbnQ6ICJGYXZvcml0ZSBDb2xvciI7IH0KCS5jb3RlX3RhYmxlIHRkOm50aC1vZi10eXBlKDUpOmJlZm9yZSB7IGNvbnRlbnQ6ICJXYXJzIG9mIFRyZWs/IjsgfQoJLmNvdGVfdGFibGUgdGQ6bnRoLW9mLXR5cGUoNik6YmVmb3JlIHsgY29udGVudDogIlNlY3JldCBBbGlhcyI7IH0KCS5jb3RlX3RhYmxlIHRkOm50aC1vZi10eXBlKDcpOmJlZm9yZSB7IGNvbnRlbnQ6ICJEYXRlIG9mIEJpcnRoIjsgfQoJLmNvdGVfdGFibGUgdGQ6bnRoLW9mLXR5cGUoOCk6YmVmb3JlIHsgY29udGVudDogIkRyZWFtIFZhY2F0aW9uIENpdHkiOyB9CgkuY290ZV90YWJsZSB0ZDpudGgtb2YtdHlwZSg5KTpiZWZvcmUgeyBjb250ZW50OiAiR1BBIjsgfQoJLmNvdGVfdGFibGUgdGQ6bnRoLW9mLXR5cGUoMTApOmJlZm9yZSB7IGNvbnRlbnQ6ICJBcmJpdHJhcnkgRGF0YSI7IH0KfQo="},{"version":3,"sources":["Deliberation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Deliberation.vue","sourceRoot":"src/views/Teacher","sourcesContent":["<template>\n\n\t<div>\n        <a-tabs @change=\"changeTab\" >\n        \t<a-tab-pane v-for=\"deliberation in deliberations\" :key=\"deliberation.id\" :tab=\"deliberation.title\">\n\t\t\t\t<a-tabs>\n                    <a-tab-pane v-for=\"course in courses\" :key=\"course.id\" :tab=\"course.title\">\n\t\t\t\t\t\t<!-- Test List card -->\n\t\t\t\t\t\t<a-card :bordered=\"true\" class=\"header-solid mb-24\" :bodyStyle=\"{padding: 0, paddingTop: '16px'}\">\n\t\t\t\t\t\t\t<template #title>\n\t\t\t\t\t\t\t\t<h5 class=\"font-semibold\">{{ deliberation.title }} / <small>Cotes {{ course.title }}</small></h5>\n\t\t\t\t\t\t\t\t<div style=\"width:100%; height:1px; background-color:#F1F1F1\"></div>\n\t\t\t\t\t\t\t</template>\t\n                            <div style=\"padding:0 30px 30px\">\n\t\t\t\t\t\t\t\t <a-alert\n\t\t\t\t\t\t\t\t\t:message=\"checkCotesSent(course, deliberation.id) ? 'Cotes déposés': 'Cotes non déposés'\"\n\t\t\t\t\t\t\t\t\t:description=\"checkCotesSent(course, deliberation.id) ? 'Vous avez déjà déposé les cotes de ce cours': 'Vous devez-déposer les cotes. Une fois les cotes envoyé, la moyenne est calculée sur 20 et est soumis au jury'\"\n\t\t\t\t\t\t\t\t\t:type=\"!checkCotesSent(course, deliberation.id)? 'warning': 'success'\"\n\t\t\t\t\t\t\t\t\tshow-icon\n\t\t\t\t\t\t\t\t/>\n                                <a-button v-if=\"!checkCotesSent(course, deliberation.id)\" :loading=\"false\" @click=\"sendCotes(course.id)\" style=\"margin-top:10px; margin-right:10px\" icon=\"save\">\n                                    Déposer les cotes \n                                </a-button>\n                                <a-button @click=\"seeCotes(course.id)\" style=\"margin-top:10px;\" icon=\"eye\">\n                                    Voir les cotes {{ checkCotesSent(course, deliberation.id) ? 'envoyés': '' }}\n                                </a-button>\n                            </div>\n\t\t\t\t        </a-card>\n\t\t\t\t    <!-- / Test List card -->\n                    </a-tab-pane>\n                </a-tabs>\n            </a-tab-pane>\n        </a-tabs>\n        \n        <a-modal centered width=\"100%\" v-model=\"visible\" title=\"Toutes les cotes\" @ok=\"handleOk\">\n\t\t\t<table class=\"cote_table\">\n\t\t\t\t<!-- Responsive Table Header Section -->\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th v-for=\"coteColumn in coteColumns\" :key=\"coteColumn\">{{ coteColumn }}</th>\n \t\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<!-- Responsive Table Body Section -->\n\t\t\t\t<tbody class=\"responsive-table__body\">\n\t\t\t\t\t<tr v-for=\"data in coteData\" :key=\"data.key\">\n\t\t\t\t\t\t<td v-for=\"row in data\" :key=\"row\">{{ row == null ? 'Vide': row }}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n        </a-modal>\t\n\t\t\n\t</div>\n\n</template>\n\n<script>\n\timport Toast from \"../../store/alert\"\n\n\tlet momentjs = require('moment');\n\timport Vuex from 'vuex'\n\n    const data =  [];\n\n\t// Table columns\n\tconst columns = [\n\t\t{\n\t\t\ttitle: 'ID',\n\t\t\tdataIndex: 'id',\n\t\t\tsorter: (a, b) => a.id - b.id,\n\t\t\tsortDirections: ['descend', 'ascend'],\n\t\t\tscopedSlots: { customRender: 'id' },\n\t\t},\n\t\t{\n\t\t\ttitle: 'ETUDIANT',\n\t\t\tdataIndex: 'names',\n\t\t\tsorter: (a, b) => a.names - b.names,\n\t\t\tsortDirections: ['descend', 'ascend'],\n\t\t\tscopedSlots: { customRender: 'student' },\n\t\t},\n\t\t{\n\t\t\ttitle: 'COTE',\n\t\t\tdataIndex: 'cote',\n\t\t\tsorter: (a, b) => a.cote.length - b.cote.length,\n\t\t\tsortDirections: ['descend', 'ascend'],\n\t\t\tscopedSlots: { customRender: 'cote' },\n\t\t},\n\t];\n\texport default {\n\t\tcomponents: {\n\t\t},\n\t\tdata() {\n\t\t\treturn {\n\n\t\t\t\tlcotesSent: [],\n\n\t\t\t\ttestcheck: {\n\t\t\t\t\t1: {\n\t\t\t\t\t\t2: true\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tselected_deliberation_id: null,\n\n\t\t\t\tannualCoteChecks: {\n\t\t\t\t\t0: true\n\t\t\t\t},\n\n\t\t\t\tcoteColumns: [],\n\n\t\t\t\tcoteData: [],\n\n\t\t\t\tdata: data,\n\n\t\t\t\texamCoteChecks: {},\n\n\t\t\t\tcurrent_course: null,\n\n\t\t\t\tmoment: momentjs,\n\n                activeKey: ['0'],\n\n\t\t\t\thasChange: false,\n\t\t\t\t// Table columns\n\t\t\t\tcolumns,\n\n\t\t\t\t// First table's number of rows per page.\n\t\t\t\tpageSize: 10,\n\n\t\t\t\t// Second table's number of rows per page.\n\t\t\t\tpageSize2: 10,\n\t\t\t\t\n\t\t\t\t// Second table's search query.\n\t\t\t\tquery: '',\n\n\t\t\t\t//modal visibility\n      \t\t\tvisible: false,\n\t\t\t\t\n\t\t\t\tformLayout: 'horizontal',\n      \t\t\t\n\t\t\t\tform: this.$form.createForm(this, { name: 'coordinated' }),\n\t\t\t\tformAnnual: this.$form.createForm(this, { name: 'annual' }),\n\n\t\t\t\t// Table's selected rows\n      \t\t\tselectedRowKeys: [],\n\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\t...Vuex.mapActions({\n\t\t\t\taddTest: 'addTest',\n\t\t\t\teditSelectedCourse: 'editSelectedCourse',\n\t\t\t\tdeleteTest: 'deleteTest',\n\t\t\t\tupdateStoreCotes: 'updateCotes',\n\t\t\t\tgetAllCourseCotes: 'getAllCourseCotes',\n\t\t\t\tsendCotesStore: 'sendCotes'\n\t\t\t}),\n\t\t\tdeleteRow(id) {\n\t\t\t\tthis.$swal.fire({\n\t\t\t\t\ttitle: \"Êtes-vous sûre ?\",\n\t\t\t\t\ttext: \"Une fois supprimée, vous n'allez plus récuperer cette information\",\n\t\t\t\t\ticon: \"warning\",\n\t\t\t\t\tshowDenyButton: true,\n\t\t\t\t  \tdenyButtonText: `Supprimer`,\n\t\t\t\t\tconfirmButtonText: 'Annuler',\n  \t\t\t\t\tfocusConfirm: false,\n\t\t\t\t\tdangerMode: true,\n\t\t\t\t}).then((result) => {\n\t\t\t\t\tif (result.isDenied) {\n\t\t\t\t\t\tthis.deleteTest(id)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tcheckCotesSent(course, deliberation_id) {\n\t\t\t\tif (!this.lcotesSent === undefined) {\n\t\t\t\t\tif (this.lcotesSent[deliberation_id].find(elem => elem.course === course.id).sent) {\n\t\t\t\t\t\treturn true\n\t\t\t\t\t}\n\t\t\t\t} \n\t\t\t\t\n\t\t\t\tif (course.course_delib[deliberation_id]) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn false\n\t\t\t},\t\n\n\t\t\tsendCotes (course_id) {\n\t\t\t\tthis.$swal.fire({\n\t\t\t\t\ttitle: \"Êtes-vous sûre ?\",\n\t\t\t\t\ttext: \"Une fois que vous avez deposé le côtes vous ne pourez plus revenir en arrière, Rassurez-vous que les cotes de toutes les épreuves sont bien transcrits\",\n\t\t\t\t\ticon: \"warning\",\n\t\t\t\t\tshowDenyButton: true,\n\t\t\t\t  \tdenyButtonText: `Déposer`,\n\t\t\t\t\tconfirmButtonText: 'Annuler',\n  \t\t\t\t\tfocusConfirm: false,\n\t\t\t\t\tdangerMode: true,\n\t\t\t\t}).then((result) => {\n\t\t\t\t\tif (result.isDenied) {\n\t\t\t\t\t\tthis.sendCotesStore({course_id: course_id, session_id: this.selected_deliberation_id})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tseeCotes (course_id) {\n\t\t\t\tthis.showModal()\n\t\t\t\tthis.getAllCourseCotes({course_id: course_id, session_id: this.selected_deliberation_id})\n\t\t\t\t.then(response => {\n\t\t\t\t\tconsole.log(response)\n\t\t\t\t\tthis.coteColumns = response.data.columns\n\t\t\t\t\tthis.coteData = response.data.datas\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tchangeTab(value) {\n\t\t\t\tthis.selected_deliberation_id = value\n\t\t\t},\n\n\t\t\tupdateCotes() {\n\t\t\t\tlet to_update = {}\n\t\t\t\t\n\t\t\t\tthis.cotes.forEach(cote => {\n\t\t\t\t\tif (this.inputCotes[cote.id] !== cote.cote){\n\t\t\t\t\t\tto_update['data_' + cote.id] = this.inputCotes[cote.id]\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tthis.updateStoreCotes(to_update).then((response) => {\n\t\t\t\t\tif (response.data.success) {\n\t\t\t\t\t\tthis.hasChange = false\n\n\t\t\t\t\t\tToast.fire({\n\t\t\t\t\t\t\ticon: \"success\",\n\t\t\t\t\t\t\ttitle: response.data.message,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tupdatedInput(cote) {\n\t\t\t\tthis.hasChange = true\n\t\t\t\tthis.updatedInputs[cote] = true\n\t\t\t},\n\t\t\t// Event listener for input change on table search field.\n\t\t\tonSearchChange() {\n\t\t\t\tif( this.query.length > 0 ) {\n\t\t\t\t\tthis.data = data.filter( (row) => {\n\t\t\t\t\t\tfor( const key in row ) {\n\t\t\t\t\t\t\tif( row[ key ]\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t\t.includes( this.query.trim().toLowerCase() ) )\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}) ;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.data = data ;\n\t\t\t\t}\n\t\t\t},\n\t\t\tchange() {\n\t\t\t\tconsole.log(this.annualCoteChecks)\n\t\t\t\tthis.annualCoteChecks[25] = false\n\t\t\t\tthis.annualCoteChecks [26] = true\n\t\t\t},\n\t\t\t// Event listener for table row selection change.\n\t\t\tonSelectChange(selectedRowKeys) {\n\t\t\t\tthis.selectedRowKeys = selectedRowKeys;\n\t\t\t},\n\n\t\t\t// Event handler for first table's size change.\n\t\t\tonPageSizeChange() {\n\t\t\t\tthis.pageSize = parseInt( this.pageSize ) ;\n\t\t\t},\n\n\t\t\t// Event handler for second table's size change.\n\t\t\tonPageSize2Change() {\n\t\t\t\tthis.pageSize2 = parseInt( this.pageSize2 ) ;\n\n\t\t\t},\n\t\t\tshowModal() {\n\t\t\t\tthis.visible = true;\n\t\t\t},\n\n\t\t\thandleSelectChange() {\n\t\t\t\tconsole.log('changed')\n\t\t\t},\n\n\t\t\tshowEditModal() {\n\t\t\t\tthis.visible = true;\n\t\t\t},\n\n\t\t\thandleOk(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\t\n\t\t\t\tthis.visible = false;\n\n\t\t\t\tthis.form.validateFields((err, values) => {\n\t\t\t\t\tif ( !err ) {\n\t\t\t\t\t\tthis.addTest(values)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\tcallback(key) {\n\t\t\t\t//console.log(key);\n\t\t\t},\n\n\t\t\tcreate_test(id) {\n\t\t\t\tthis.showModal();\n\t\t\t}\n\t\t\t\t\t\t\n\t\t},\n\t\t\n\t\tcomputed: {\n\t\t\t...Vuex.mapGetters({\n\t\t\t\tprofSelectedCourse: 'profSelectedCourse',\n\t\t\t\tcourses: 'tests',\n\t\t\t\tcotes: 'cotes',\n\t\t\t\tgetSingleCote: 'getSingleCote',\n\t\t\t\tcoteObj: 'coteObj',\n\t\t\t    deliberations: \"deliberations\",\n\t\t\t    allcotes: \"deliberations\",\n\t\t\t    cotesSent: \"getCotesSent\",\n\t\t\t})\n\t\t},\n\n\t\twatch: {\n\t\t\tdeliberations(values) {\n\t\t\t\tif (values !== undefined && this.selected_deliberation_id === null) {\n\t\t\t\t\tthis.selected_deliberation_id = values[0].id\n\t\t\t\t}\n\t\t\t},\n\t\t\tcotesSent(values) {\n\t\t\t\tif (values !== undefined) {\n\t\t\t\t\tthis.lcotesSent = values\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tmounted() {\n\t\t\tthis.$store.dispatch(\"getDeliberations\", 1);\n\t\t\tthis.$store.dispatch('profTests')\n\t\t},\n\t}\n</script>\n\n<style lang=\"scss\">\n/* Chrome, Safari, Edge, Opera */\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n    text-align: right;\n\tmargin-right: 10px;\n}\n\n/* Firefox */\ninput[type=number] {\n  -moz-appearance: textfield;\n    text-align: right;\n\tmargin-right: 10px;\n}\n\n.cote_input {\n\twidth: 70px\n}\n\n.cote_input.border-red {\n\twidth: 70px;\n}\n\n/** table */\n\ntable.cote_table { \n  width: 100%; \n  border-collapse: collapse; \n}\n\n.cote_table tr:nth-of-type(odd) { \n  background: #eee; \n}\n.cote_table th { \n  background: #fff; \n  color: #000; \n  font-weight: bold; \n}\n.cote_table td, .cote_table th { \n  padding: 6px; \n  text-align: left; \n}\n\n@media \nonly screen and (max-width: 760px),\n(min-device-width: 768px) and (max-device-width: 1024px)  {\n\n\t/* Force table to not be like tables anymore */\n\ttable.cote_table , .cote_table thead, .cote_table tbody, .cote_table th, .cote_table td, .cote_table tr { \n\t\tdisplay: block; \n\t}\n\t\n\t/* Hide table headers (but not display: none;, for accessibility) */\n\t.cote_table thead tr { \n\t\tposition: absolute;\n\t\ttop: -9999px;\n\t\tleft: -9999px;\n\t}\n\t\n\t.cote_table tr { border: 1px solid #ccc; }\n\t\n\t.cote_table td { \n\t\t/* Behave  like a \"row\" */\n\t\tborder: none;\n\t\tborder-bottom: 1px solid #eee; \n\t\tposition: relative;\n\t\tpadding-left: 50%; \n\t}\n\t\n\t.cote_table td:before { \n\t\t/* Now like a table header */\n\t\tposition: absolute;\n\t\t/* Top/left values mimic padding */\n\t\ttop: 6px;\n\t\tleft: 6px;\n\t\twidth: 45%; \n\t\tpadding-right: 10px; \n\t\twhite-space: nowrap;\n\t}\n\t\n\t/*\n\tLabel the data\n\t*/\n\t.cote_table td:nth-of-type(1):before { content: \"First Name\"; }\n\t.cote_table td:nth-of-type(2):before { content: \"Last Name\"; }\n\t.cote_table td:nth-of-type(3):before { content: \"Job Title\"; }\n\t.cote_table td:nth-of-type(4):before { content: \"Favorite Color\"; }\n\t.cote_table td:nth-of-type(5):before { content: \"Wars of Trek?\"; }\n\t.cote_table td:nth-of-type(6):before { content: \"Secret Alias\"; }\n\t.cote_table td:nth-of-type(7):before { content: \"Date of Birth\"; }\n\t.cote_table td:nth-of-type(8):before { content: \"Dream Vacation City\"; }\n\t.cote_table td:nth-of-type(9):before { content: \"GPA\"; }\n\t.cote_table td:nth-of-type(10):before { content: \"Arbitrary Data\"; }\n}\n</style>"]}]}