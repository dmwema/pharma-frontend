{"remainingRequest":"/home/calculus/dev/m/pharma-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/calculus/dev/m/pharma-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/calculus/dev/m/pharma-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/calculus/dev/m/pharma-frontend/src/views/Fac/Teachers.vue?vue&type=template&id=41e20d5c&","dependencies":[{"path":"/home/calculus/dev/m/pharma-frontend/src/views/Fac/Teachers.vue","mtime":1652296673326},{"path":"/home/calculus/dev/m/pharma-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/calculus/dev/m/pharma-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/calculus/dev/m/pharma-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/calculus/dev/m/pharma-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}