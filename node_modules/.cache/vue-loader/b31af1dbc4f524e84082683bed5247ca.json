{"remainingRequest":"/home/daniel/projetcs/pharma/pharma-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/daniel/projetcs/pharma/pharma-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/daniel/projetcs/pharma/pharma-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/daniel/projetcs/pharma/pharma-frontend/src/views/Fac/Session.vue?vue&type=template&id=7985a2a5&","dependencies":[{"path":"/home/daniel/projetcs/pharma/pharma-frontend/src/views/Fac/Session.vue","mtime":1656075102877},{"path":"/home/daniel/projetcs/pharma/pharma-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1654350269016},{"path":"/home/daniel/projetcs/pharma/pharma-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1654350271480},{"path":"/home/daniel/projetcs/pharma/pharma-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1654350269016},{"path":"/home/daniel/projetcs/pharma/pharma-frontend/node_modules/vue-loader/lib/index.js","mtime":1654350270784}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}